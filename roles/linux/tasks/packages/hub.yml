---
- name: Check for GitHub 'hub'
  stat:
      path: /usr/local/bin/hub
  register: which_hub
  changed_when: not (which_hub.stat.exists and which_hub.stat.executable)

- name: Install GitHub 'hub'
  when: which_hub.changed
  block:
      - name: Create temp file for archive
        register: tmp_hub
        tempfile:
            state: directory

      - name: Extract archive
        unarchive:
            remote_src: true
            src: '{{ hub_url }}'
            dest: '{{ tmp_hub.path }}'

      - name: Find files to copy
        register: hub_find
        find:
            paths: '{{ tmp_hub.path }}'
            recurse: true
            patterns:
                - '*.1'  # man
                - '*.vim'
                - hub

      - name: Copy hub files
        vars:
            hub_tar_root: '{{ tmp_hub.path }}/{{ hub_top_dir }}'
        loop: >-
            {{ hub_find.files
            |map(attribute='path')
            |map('relpath', hub_tar_root)
            |list}}
        include_tasks: _hub_copy.yml
        loop_control:
            loop_var: hub_file

      - name: Make hub executable
        file:
            path: /usr/local/bin/hub
            mode: 0755

      - name: Delete temporary archive
        file:
            path: '{{ tmp_hub.path }}'
            state: absent

