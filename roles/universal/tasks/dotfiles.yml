---
- name: Check for .gitconfig
  register: has_gitconfig
  stat:
    path: '{{ ansible_user_dir }}/.gitconfig'
  changed_when: not has_gitconfig.stat.exists

- name: Check for 'helper = "manager"' in .gitconfig
  register: needs_gitconfig
  command: git config
              --file {{ ansible_user_dir }}/.gitconfig
              --get credential.helper
  when: has_gitconfig is not changed
  changed_when: needs_gitconfig.stdout != 'manager'
  failed_when: needs_gitconfig.rc not in [0, 1]

- name: Use bootstrapping .gitconfig
  when: has_gitconfig is changed or needs_gitconfig is changed
  become: true
  become_user: '{{ user }}'
  copy:
      src: bootstrap_gitconfig
      dest: '{{ ansible_user_dir }}/.gitconfig'

- name: Clone dotfiles
  become: true
  become_user: '{{ user }}'
  git:
      repo: '{{ dotfiles_repo.git }}'
      dest: '{{ dotfiles_repo.dest }}'
      update: false
  register: dotfiles_clone

- name: Delete bootstrapping .gitconfig
  when: needs_gitconfig is changed
  file:
      state: absent
      path: '{{ ansible_user_dir }}/.gitconfig'

- vars:
    link_dotfiles: '{{ link_dotfiles_raw.stdout | from_json }}'
  block:
    - name: Link dotfiles
      become: true
      become_user: '{{ user }}'
      args:
        chdir: '{{ dotfiles_repo.dest }}'
      command: ./setup.py
      register: link_dotfiles_raw
      changed_when: link_dotfiles.changed
      failed_when: link_dotfiles_raw.rc != 0 or link_dotfiles.failed

    - debug:
        var: link_dotfiles.files
